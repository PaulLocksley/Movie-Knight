

@using System.Net.Mime
@using System.Text
@using Microsoft.Extensions.Primitives
@model Movie_Knight.Pages.UserComparison
@{ ArgumentNullException.ThrowIfNull(Model); }

<script>
function openTab(evt, viewName) {
  // Declare all variables
  var i, tabcontent, tablinks;

  // Get all elements with class="tabcontent" and hide them
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }

  // Get all elements with class="tablinks" and remove the class "active"
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }

  // Show the current tab, and add an "active" class to the button that opened the tab
  document.getElementById(viewName).style.display = "block";
  evt.currentTarget.className += " active";
}
</script>

<div class="tab container">
    <button class="tablinks" id="defaultOpen" onclick="openTab(event, 'tableView')">Table</button>
    <button class="tablinks" onclick="openTab(event, 'graphView')">Graphs</button>
    <button class="tablinks" onclick="openTab(event, 'recommendationsView')">Recommendations</button>
</div>
<div id="tableView" class="tabcontent">
    @if (Model.SharedMovies is {} movies)
    {
        <table>
        @if (Model.ComparisonUsers is {} users)
        {

            <tr>
                <th>Name</th>
                @foreach (var user in users)
                {
                    <th>@user.username</th>
                }
                <th>Average Rating</th>
                <th>Total Delta to Average</th>
            </tr>
            @foreach (var movie in movies)
            {
                <tr>
                    <td>
                        <a href="https://letterboxd.com/film/film:@movie.movieData.id/">
                            @movie.movieData.name.Split("-").Select(x =>
                                     x[..1].ToUpper() + x[1..]).Aggregate("", (x, y) => (x + " " + y))
                        </a>
                    </td>

                    @foreach (var user in users)
                    {
                        <td>@user.userList[movie.Item1.id]</td>
                    }
                    <td>@movie.Item2</td>
                    <td>@movie.Item3</td>
                </tr>
            }
        }
        </table>
    }
</div>

<!-- Graph Section -->

<div id="graphView" class="tabcontent">
    <div>
        <canvas id="movieScoreGraph"></canvas>
    </div>
    <div>
        <canvas id="scatterPlot"></canvas>
    </div>
    <div>
        <canvas id="genreRadar"></canvas>
    </div>
    
    <script>
      var ctx = document.getElementById('movieScoreGraph');
    
      new Chart(ctx, {
        type: 'bar',
        data: {
          @Html.Raw(Model.barGraphData.ToString())
        },
        options: {
         responsive: true,
         plugins: {
           legend: {
             position: 'top',
           },
           title: {
             display: true,
             text: 'User Ratings'
           }
         }
       }
      });
      
      var stx = document.getElementById('scatterPlot');
      new Chart(stx, {
           type: 'scatter',
           data: @Html.Raw(Model.scatterPlotData.ToString()),
           options: {
               plugins:{
                    tooltip: {
                        callbacks: {
                            label: (context) => {
                                return `${context.raw.name}: Rating: ${context.raw.y} Frequency: ${context.raw.x}`;
                            }
                        }
                    }
               } 
           } 
      });
      
    var rtx = document.getElementById('genreRadar');
    new Chart(rtx, {
         type: 'radar',
         data: @Html.Raw(Model.radarPlotData.ToString()),
         options: {
             scale: {
                 max: 10,
                 min: 0,
           
             }

         } 
         }
    );
    </script>
    
</div>


<!-- Recommendation Section -->
<div id="recommendationsView" class="tabcontent">
    <h3>Recommendations:</h3>
    <p>Recommendations are based on the following criteria:</p>
    <ul>
        <li>No users have seen the movie</li>
        <li>It is related to at least <b>two</b> movies that the group mean rating is > 8</li>
    </ul>
    @if (Model.movieRecs.Count == 0)
    {
        <h2>Congrats, I don't have any recommendations for you. </h2>
    }
    @foreach (var movie in Model.movieRecs)
    {           
        <div class="movieRec">
            <a href="https://letterboxd.com/film/film:@movie.id/"><h4>@movie.name.Split("-").Select(x => 
                    x[..1].ToUpper() + x[1..]).Aggregate("", (x, y) => (x + " " + y))</h4></a>
            <p>Duration: @movie.duration mins</p>
            <p>Genres: @movie.attributes.Where(x => x.key == "genre").Aggregate("",(x,y) => ""+y.value)
            </p>
        </div>
    }
</div>










<script>document.getElementById("defaultOpen").click();
</script>