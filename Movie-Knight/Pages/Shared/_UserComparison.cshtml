@using Movie_Knight.Models
@model Movie_Knight.Pages.UserComparison
@{ ArgumentNullException.ThrowIfNull(Model); }

<div id="userAnalysis" class="text-gray-200">
<div class="tab container">
    <button class="tablinks active" 
            onclick="showTab('table')">Table</button>
    <button class="tablinks" 
            onclick="loadHtmxTab('graphs', '/_Graph@(ViewContext.HttpContext.Request.QueryString)', this)">Graphs</button>
    <button class="tablinks" 
            onclick="loadHtmxTab('watchlist', '/_WatchList@(ViewContext.HttpContext.Request.QueryString)', this)">Watch List</button>
    <button class="tablinks" 
            onclick="showTab('recommendations')">Recommendations</button>
</div>

<div id="tab-content">
    <!-- Table Tab Content -->
    <div id="table-tab" class="tab-pane">
        @if (Model.SharedMovies is {} movies)
        {
            <table class="min-w-5xl">
            @if (Model.ComparisonUsers is {} users)
            {
                <tr class="p-4 font-bold text-xl">
                    <th class="max-w-34">Name</th>
                    @foreach (var user in users)
                    {
                        <th>@user.username <br/> Δx̄ @Model.UserDeltas[user.username]</th>
                    }
                    <th>Group Average Rating</th>
                    <th>Total Delta to Average <br/> x̄ @((Model.SharedMovies.Sum(x => x.delta)
                                                              /Model.SharedMovies.Count).ToString())</th>
                    @if (Model.SortOrder == SortType.Popularity || Model.SortOrder == SortType.PopularityDesc)
                    {
                        <th># of ratings</th>
                    }
                    <th><div class="dropdown">
                                    <button class="dropbtn bg-cyan-500 hover:bg-cyan-300 rounded-sm"><img src="img\sort.svg" alt="Sort" width="36px"/></button>
                                    <div class="dropdown-content bg-cyan-500 hover:bg-cyan-300 text-gray-950">
                                        @foreach (var viewSortType in Enum.GetValues(typeof(SortType)).Cast<SortType>())
                                        {
                                            <div class="dropdown-link" 
                                                 hx-get="/UserComparison?@(ViewContext.HttpContext.Request.QueryString.Value?.Replace("sortString=" + Model.SortOrder, "") ?? "")&sortString=@viewSortType" 
                                                 hx-target="#userAnalysis">
                                                @viewSortType
                                            </div>
                                        }
                                    </div>
                                </div></th>
                </tr>
                @foreach (var movie in movies)
                {
                    <tr onclick="showHidenRow('info-@movie.movieData.id')" class="text-lg border-y border-gray-800">
                        <td class="max-w-34">
                            <a href="https://letterboxd.com/film/film:@movie.movieData.id/" class="text-blue-500 hover:text-blue-400">
                                @movie.movieData.name.Split("-").Select(x =>
                                    x[..1].ToUpper() + x[1..]).Aggregate("", (x, y) => (x + " " + y))
                            </a>
                        </td>

                        @foreach (var user in users)
                        {
                            <td>@user.userList[movie.Item1.id].ToString()</td>
                        }
                        <td>@Math.Round(movie.Item2,2)</td>
                        <td>@movie.Item3</td>
                        @if (Model.SortOrder == SortType.Popularity || Model.SortOrder == SortType.PopularityDesc)
                                        {
                                            <td>@movie.movieData.RatingCount.ToString()</td>
                                        }
                        <td >
                            <img src="img/expand_more.svg" id="img-info-@movie.movieData.id" alt="Expand"/>
                        </td>
                    </tr>
                    <tr id="info-@movie.movieData.id" class="hidden-row">
                    </tr>
                }
            }
            </table>
        }
    </div>

    <!-- Graphs Tab Content -->
    <div id="graphs-tab" class="tab-pane" style="display: none;">
        <!-- Content will be loaded via HTMX -->
    </div>

    <!-- Watch List Tab Content -->
    <div id="watchlist-tab" class="tab-pane" style="display: none;">
        <!-- Content will be loaded via HTMX -->
    </div>

    <!-- Recommendations Tab Content -->
    <div id="recommendations-tab" class="tab-pane" style="display: none;">
        <h3 class="text-xl">Recommendations:</h3>
        <p>Recommendations are based on the following criteria:</p>
        <ul class="list-disc list-inside">
            <li>No users have seen the movie</li>
            <li>It is related to at least <b class="font-semibold">two</b> movies that the group has given a mean rating of 8 or above</li>
        </ul>
        @if (Model.MovieRecs.Count == 0)
        {
            <h2>Congrats, I don't have any recommendations for you. </h2>
        }
        else
        {
            <table class="text-left border-collapse w-full">
                <tr class="text-xl">
                    <th scope="col">Title</th>
                    <th scope="col">Genre</th>
                    <th scope="col">Duration (mins)</th>
                </tr>
                @foreach (var movie in Model.MovieRecs.OrderBy(x => x.attributes.Where(a => a.role == "genre").Aggregate("", (_, y) => "" + y.name)))
                {
                    <tr class="border-y border-gray-800">
                    <th scope="row">
                        <a class="text-lg text-blue-500 hover:text-blue-400" href="https://letterboxd.com/film/film:@movie.id/">
                            <h4>@movie.name.Split("-").Select(x =>
                                    x[..1].ToUpper() + x[1..]).Aggregate("", (x, y) => (x + " " + y))</h4></a></th>

                <td>@movie.attributes.Where(x => x.role == "genre").Aggregate("", (_, y) => "" + y.name)
                </td>
                <td>@movie.duration</td>
                </tr>
                            
                }
            </table>
        }
    </div>
</div>
</div>

