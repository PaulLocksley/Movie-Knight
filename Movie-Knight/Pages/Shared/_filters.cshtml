@page "/_filters"
@model Movie_Knight.Pages.Shared._filters
@{ ArgumentNullException.ThrowIfNull(Model); }

<tr id="info-@Model.movie!.id" class="hidden-row" style="display: contents;">
    <td colspan="100%">
    <div class="flex">
        <div class="flex gap-2">
            <div class="flex flex-col">
            <h6 class="text-lg"> Average Rating:<br/>@Model.movie.averageRating </h6>
            <h6 class="text-lg"> Total Ratings:<br/>@Model.movie.RatingCount</h6>
            </div>
            <div style="width: 300px"><h6>Description:</h6>
                <p> @Html.Raw(Model.movie.description) </p>
            </div>
        </div>
    @foreach (var role in Model.displayFilterRolesWeCareAbout)
    {
            <div class="filters">
                <h5>@(role[0] == "cast" ? "Cast" : "Other")</h5>
                <span></span>

                @foreach (var atr in Model.movie.attributes.Where(x =>
                              role.Contains(x.role)
                          ))
                {
                    <div class="filter max-h-6">
                        <button class="remove-filter" onclick="filterTable('Remove','@atr.role','@atr.name')">
                            <img src="img/remove.svg" alt="remove filter"/>
                        </button>

                        <p class="filter-label">@atr.name.Split("-").Select(x =>
                                                {
                                                    if (x.Length == 0)
                                                    {
                                                        return "";
                                                    }

                                                    var tmpString = x[..1].ToUpper();
                                                    if (x.Length > 1)
                                                    {
                                                        tmpString += x[1..];
                                                    }

                                                    return tmpString;
                                                }).Aggregate("", (x, y) => (x + " " + y))</p>
                        <button class="add-filter" onclick="filterTable('Require','@atr.role','@atr.name')">
                            <img src="img/add.svg" alt="Add filter"/>
                        </button>
                    </div>
                }
            </div>
    }
    </div>
</tr>
    @{
        Layout = null;
    }

@*<div class="filter-groups">
    @foreach(var ct in @Model.rolesWeCareAbout){
        <div class="filters">
            <h4>@ct</h4>
            @foreach (var a in Model.SharedMovies)
            {
                @foreach (var atr in a.movieData.attributes.Where(at => at.role == ct))
                {
                    <div class="filter">
                        <button class="remove-filter" onclick=""><img src="img/remove.svg" alt="Remove"/></button>
                        <p class="filter-label">@atr.name</p>
                        <button class="add-filter" onclick=""><img src="img/add.svg" alt="Remove"/></button>
                    </div>
                }
            }
        </div>
    }
</div>*@